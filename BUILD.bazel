# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_kindlyops_rules_manifest//:manifest.bzl", "docker_manifest", "lambda_manifest")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation
exports_files(
    [
        "tsconfig.json",
        "jest.config.js",
    ],
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "cdk",
    args = ["--app $(location //lib:app)"],
    data = [
        "tsconfig.json",
        "//lib",
        "//lib:app",
    ],
    entry_point = "@npm//:node_modules/aws-cdk/bin/cdk",
    node_modules = "@npm//:node_modules",
    visibility = ["//visibility:public"],
)

genrule(
    name = "synth",
    outs = ["synth.tar"],
    cmd = "$(execpath //lib:app) cdk.out $@",
    tools = ["//lib:app"],
    visibility = ["//visibility:public"],
)

# gazelle:prefix github.com/kindlyops/bazel-cdk-demo
gazelle(name = "gazelle")

lambda_manifest(
    name = "lambdamanifest",
    srcs = [
        "//lambdas/demo:lambda_zip",
        "//lambdas/demo2:lambda_zip",
    ],
)

go_image(
    name = "container",
    binary = "@com_github_containous_whoami//:whoami",
)

container_push(
    name = "push",
    format = "Docker",
    image = ":container",
    registry = "gcr.io",
    repository = "example-service",
    visibility = ["//visibility:public"],
)

docker_manifest(
    name = "containermanifest",
    srcs = [
        ":push.digest",
    ],
)
